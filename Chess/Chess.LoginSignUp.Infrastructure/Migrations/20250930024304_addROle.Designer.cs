// <auto-generated />
using System;
using Chess.LoginSignUp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chess.LoginSignUp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250930024304_addROle")]
    partial class addROle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chess.LoginSignUp.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2e942320-401b-4990-9096-f2fdc72a90d2"),
                            Name = "Admin"
                        },
                        new
                        {
                            ID = new Guid("cca564cd-a15a-420f-9836-81f301a37b14"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("Chess.LoginSignUp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("ef0b473f-dd5c-42fc-bcf1-33142ea0ed4e"),
                            Email = "admin@example.com",
                            Name = "Administrator",
                            PasswordHash = "123",
                            RoleID = new Guid("2e942320-401b-4990-9096-f2fdc72a90d2"),
                            Username = "admin"
                        },
                        new
                        {
                            UserID = new Guid("01e4b8c6-3baf-4046-b0f2-f2eaaa2b43df"),
                            Email = "guest@example.com",
                            Name = "Guest User",
                            PasswordHash = "guest",
                            RoleID = new Guid("cca564cd-a15a-420f-9836-81f301a37b14"),
                            Username = "guest"
                        },
                        new
                        {
                            UserID = new Guid("984980c9-efde-47f9-820d-0e44a7824f5d"),
                            Email = "user1@example.com",
                            Name = "User One",
                            PasswordHash = "user1password",
                            RoleID = new Guid("cca564cd-a15a-420f-9836-81f301a37b14"),
                            Username = "user1"
                        },
                        new
                        {
                            UserID = new Guid("8b7f31e2-60d9-473f-a824-23458f681040"),
                            Email = "user2@example.com",
                            Name = "User Two",
                            PasswordHash = "user2password",
                            RoleID = new Guid("cca564cd-a15a-420f-9836-81f301a37b14"),
                            Username = "user2"
                        },
                        new
                        {
                            UserID = new Guid("e1958583-4591-40a9-b365-9b11d0993ac4"),
                            Email = "user3@example.com",
                            Name = "User Three",
                            PasswordHash = "user3password",
                            RoleID = new Guid("cca564cd-a15a-420f-9836-81f301a37b14"),
                            Username = "user3"
                        });
                });

            modelBuilder.Entity("Chess.LoginSignUp.Domain.Entities.User", b =>
                {
                    b.HasOne("Chess.LoginSignUp.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Chess.LoginSignUp.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
