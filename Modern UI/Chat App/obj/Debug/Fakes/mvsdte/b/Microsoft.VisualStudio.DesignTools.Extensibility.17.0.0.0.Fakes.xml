<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.DesignTools.Extensibility.17.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.AssemblyReferences</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.AssemblyReferences)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.BuildAssemblyReferencesIEnumerableOfAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.BuildAssemblyReferences(IEnumerable`1&lt;AssemblyIdentifier&gt; newReferences)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.ItemTypeGet">
            <summary>Sets the Shim of AssemblyReferences.get_ItemType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.LocalAssemblyIdentifierGet">
            <summary>Sets the Shim of AssemblyReferences.get_LocalAssemblyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.LocalAssemblyIdentifierSetAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.set_LocalAssemblyIdentifier(AssemblyIdentifier value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.OnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of AssemblyReferences.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.AllInstances.ReferencedAssembliesGet">
            <summary>Sets the Shim of AssemblyReferences.get_ReferencedAssemblies()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.BuildAssemblyReferencesIEnumerableOfAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.BuildAssemblyReferences(IEnumerable`1&lt;AssemblyIdentifier&gt; newReferences)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.Constructor">
            <summary>Sets the Shim of AssemblyReferences.AssemblyReferences()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.ConstructorAssemblyIdentifierIEnumerableOfAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.AssemblyReferences(AssemblyIdentifier localAssemblyIdentifier, IEnumerable`1&lt;AssemblyIdentifier&gt; newReferences)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.ConstructorIEnumerableOfAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.AssemblyReferences(IEnumerable`1&lt;AssemblyIdentifier&gt; newReferences)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.ItemTypeGet">
            <summary>Sets the Shim of AssemblyReferences.get_ItemType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.LocalAssemblyIdentifierGet">
            <summary>Sets the Shim of AssemblyReferences.get_LocalAssemblyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.LocalAssemblyIdentifierSetAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyReferences.set_LocalAssemblyIdentifier(AssemblyIdentifier value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.OnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of AssemblyReferences.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimAssemblyReferences.ReferencedAssembliesGet">
            <summary>Sets the Shim of AssemblyReferences.get_ReferencedAssemblies()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.AllInstances.InvokeOnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of ContextItem.InvokeOnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.AllInstances.OnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of ContextItem.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.Constructor">
            <summary>Sets the Shim of ContextItem.ContextItem()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.InvokeOnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of ContextItem.InvokeOnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItem.OnItemChangedEditingContextContextItem">
            <summary>Sets the Shim of ContextItem.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager,System.Boolean})">
            <summary>Sets the Shim of ContextItemManager.Contains()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager,``0})">
            <summary>Sets the Shim of ContextItemManager.GetValue()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances.SubscribeOf1SubscribeContextCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback{``0}})">
            <summary>Sets the Shim of ContextItemManager.Subscribe(SubscribeContextCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the Shim of ContextItemManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.AllInstances.UnsubscribeOf1SubscribeContextCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback{``0}})">
            <summary>Sets the Shim of ContextItemManager.Unsubscribe(SubscribeContextCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.Bind(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.Constructor">
            <summary>Sets the Shim of ContextItemManager.ContextItemManager()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the Shim of ContextItemManager.Contains()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.GetTargetDelegate">
            <summary>Sets the Shim of ContextItemManager.GetTarget(Delegate callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the Shim of ContextItemManager.GetValue()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.NotifyItemChangedEditingContextContextItemContextItem">
            <summary>Sets the Shim of ContextItemManager.NotifyItemChanged(EditingContext context, ContextItem item, ContextItem previousItem)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.RemoveCallbackDelegateDelegate">
            <summary>Sets the Shim of ContextItemManager.RemoveCallback(Delegate existing, Delegate toRemove)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.SubscribeOf1SubscribeContextCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback{``0}})">
            <summary>Sets the Shim of ContextItemManager.Subscribe(SubscribeContextCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the Shim of ContextItemManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimContextItemManager.UnsubscribeOf1SubscribeContextCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback{``0}})">
            <summary>Sets the Shim of ContextItemManager.Unsubscribe(SubscribeContextCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.CreateContextItemManager">
            <summary>Sets the Shim of EditingContext.CreateContextItemManager()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.CreateServiceManager">
            <summary>Sets the Shim of EditingContext.CreateServiceManager()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.Dispose">
            <summary>Sets the Shim of EditingContext.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of EditingContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.DisposingAddEventHandler">
            <summary>Sets the Shim of EditingContext.add_Disposing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.DisposingRemoveEventHandler">
            <summary>Sets the Shim of EditingContext.remove_Disposing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.ItemsGet">
            <summary>Sets the Shim of EditingContext.get_Items()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.AllInstances.ServicesGet">
            <summary>Sets the Shim of EditingContext.get_Services()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.Constructor">
            <summary>Sets the Shim of EditingContext.EditingContext()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.CreateContextItemManager">
            <summary>Sets the Shim of EditingContext.CreateContextItemManager()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.CreateServiceManager">
            <summary>Sets the Shim of EditingContext.CreateServiceManager()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.Dispose">
            <summary>Sets the Shim of EditingContext.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.DisposeBoolean">
            <summary>Sets the Shim of EditingContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.DisposingAddEventHandler">
            <summary>Sets the Shim of EditingContext.add_Disposing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.DisposingRemoveEventHandler">
            <summary>Sets the Shim of EditingContext.remove_Disposing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.ItemsGet">
            <summary>Sets the Shim of EditingContext.get_Items()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimEditingContext.ServicesGet">
            <summary>Sets the Shim of EditingContext.get_Services()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.RequirementAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequirementAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.AllInstances.AllRequiredGet">
            <summary>Sets the Shim of RequirementAttribute.get_AllRequired()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.AllRequiredGet">
            <summary>Sets the Shim of RequirementAttribute.get_AllRequired()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementAttribute.Constructor">
            <summary>Sets the Shim of RequirementAttribute.RequirementAttribute()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.RequirementSubscription</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequirementSubscription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.AllInstances.OnRequirementChanged">
            <summary>Sets the Shim of RequirementSubscription.OnRequirementChanged()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.AllInstances.RequirementChangedAddEventHandler">
            <summary>Sets the Shim of RequirementSubscription.add_RequirementChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.AllInstances.RequirementChangedRemoveEventHandler">
            <summary>Sets the Shim of RequirementSubscription.remove_RequirementChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.AllInstances.RequirementGet">
            <summary>Sets the Shim of RequirementSubscription.get_Requirement()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.ConstructorRequirementAttribute">
            <summary>Sets the Shim of RequirementSubscription.RequirementSubscription(RequirementAttribute requirement)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.OnRequirementChanged">
            <summary>Sets the Shim of RequirementSubscription.OnRequirementChanged()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.RequirementChangedAddEventHandler">
            <summary>Sets the Shim of RequirementSubscription.add_RequirementChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.RequirementChangedRemoveEventHandler">
            <summary>Sets the Shim of RequirementSubscription.remove_RequirementChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementSubscription.RequirementGet">
            <summary>Sets the Shim of RequirementSubscription.get_Requirement()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.RequirementValidator</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequirementValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.MeetsRequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_MeetsRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.OnRequirementChangedObjectEventArgs">
            <summary>Sets the Shim of RequirementValidator.OnRequirementChanged(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.PendingRequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_PendingRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.RequirementsChangedAddEventHandler">
            <summary>Sets the Shim of RequirementValidator.add_RequirementsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.RequirementsChangedRemoveEventHandler">
            <summary>Sets the Shim of RequirementValidator.remove_RequirementsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.RequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_Requirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.SubscribeRequirements">
            <summary>Sets the Shim of RequirementValidator.SubscribeRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.TypeGet">
            <summary>Sets the Shim of RequirementValidator.get_Type()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.AllInstances.UnsubscribeRequirements">
            <summary>Sets the Shim of RequirementValidator.UnsubscribeRequirements()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.ConstructorFeatureManagerType">
            <summary>Sets the Shim of RequirementValidator.RequirementValidator(FeatureManager featureManager, Type type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.MeetsRequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_MeetsRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.OnRequirementChangedObjectEventArgs">
            <summary>Sets the Shim of RequirementValidator.OnRequirementChanged(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.PendingRequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_PendingRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.RequirementsChangedAddEventHandler">
            <summary>Sets the Shim of RequirementValidator.add_RequirementsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.RequirementsChangedRemoveEventHandler">
            <summary>Sets the Shim of RequirementValidator.remove_RequirementsChanged(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.RequirementsGet">
            <summary>Sets the Shim of RequirementValidator.get_Requirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.StaticConstructor">
            <summary>Sets the Shim of RequirementValidator.RequirementValidator()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.SubscribeRequirements">
            <summary>Sets the Shim of RequirementValidator.SubscribeRequirements()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.TraceStringObjectArray">
            <summary>Sets the Shim of RequirementValidator.Trace(String format, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.TypeGet">
            <summary>Sets the Shim of RequirementValidator.get_Type()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequirementValidator.UnsubscribeRequirements">
            <summary>Sets the Shim of RequirementValidator.UnsubscribeRequirements()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.RequiresContextItemAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequiresContextItemAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances.ContextItemTypeGet">
            <summary>Sets the Shim of RequiresContextItemAttribute.get_ContextItemType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances.CreateSubscriptionEditingContext">
            <summary>Sets the Shim of RequiresContextItemAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances.MeetsRequirementEditingContext">
            <summary>Sets the Shim of RequiresContextItemAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances.ToString01">
            <summary>Sets the Shim of RequiresContextItemAttribute.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.AllInstances.TypeIdGet">
            <summary>Sets the Shim of RequiresContextItemAttribute.get_TypeId()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.ConstructorType">
            <summary>Sets the Shim of RequiresContextItemAttribute.RequiresContextItemAttribute(Type contextItemType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.ContextItemTypeGet">
            <summary>Sets the Shim of RequiresContextItemAttribute.get_ContextItemType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.CreateSubscriptionEditingContext">
            <summary>Sets the Shim of RequiresContextItemAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.MeetsRequirementEditingContext">
            <summary>Sets the Shim of RequiresContextItemAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.ToString">
            <summary>Sets the Shim of RequiresContextItemAttribute.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresContextItemAttribute.TypeIdGet">
            <summary>Sets the Shim of RequiresContextItemAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.RequiresServiceAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequiresServiceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances.CreateSubscriptionEditingContext">
            <summary>Sets the Shim of RequiresServiceAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances.MeetsRequirementEditingContext">
            <summary>Sets the Shim of RequiresServiceAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances.ServiceTypeGet">
            <summary>Sets the Shim of RequiresServiceAttribute.get_ServiceType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances.ToString01">
            <summary>Sets the Shim of RequiresServiceAttribute.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.AllInstances.TypeIdGet">
            <summary>Sets the Shim of RequiresServiceAttribute.get_TypeId()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.ConstructorType">
            <summary>Sets the Shim of RequiresServiceAttribute.RequiresServiceAttribute(Type serviceType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.CreateSubscriptionEditingContext">
            <summary>Sets the Shim of RequiresServiceAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.MeetsRequirementEditingContext">
            <summary>Sets the Shim of RequiresServiceAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.ServiceTypeGet">
            <summary>Sets the Shim of RequiresServiceAttribute.get_ServiceType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.ToString">
            <summary>Sets the Shim of RequiresServiceAttribute.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimRequiresServiceAttribute.TypeIdGet">
            <summary>Sets the Shim of RequiresServiceAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,System.Boolean})">
            <summary>Sets the Shim of ServiceManager.Contains()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.GetRequiredServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,``0})">
            <summary>Sets the Shim of ServiceManager.GetRequiredService()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.GetServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,``0})">
            <summary>Sets the Shim of ServiceManager.GetService()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.PublishOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,``0})">
            <summary>Sets the Shim of ServiceManager.Publish(!!0 serviceInstance)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.PublishOf1PublishServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,Microsoft.VisualStudio.DesignTools.Extensibility.PublishServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Publish(PublishServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.SubscribeOf1SubscribeServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Subscribe(SubscribeServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the Shim of ServiceManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.AllInstances.UnsubscribeOf1SubscribeServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Unsubscribe(SubscribeServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.Bind(System.IServiceProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.Bind(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.Constructor">
            <summary>Sets the Shim of ServiceManager.ServiceManager()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.ContainsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the Shim of ServiceManager.Contains()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.GetRequiredServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the Shim of ServiceManager.GetRequiredService()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.GetServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the Shim of ServiceManager.GetService()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.GetTargetDelegate">
            <summary>Sets the Shim of ServiceManager.GetTarget(Delegate callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.PublishOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the Shim of ServiceManager.Publish(!!0 serviceInstance)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.PublishOf1PublishServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.PublishServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Publish(PublishServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.RemoveCallbackDelegateDelegate">
            <summary>Sets the Shim of ServiceManager.RemoveCallback(Delegate existing, Delegate toRemove)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.SubscribeOf1SubscribeServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Subscribe(SubscribeServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the Shim of ServiceManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimServiceManager.UnsubscribeOf1SubscribeServiceCallbackOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback{``0}})">
            <summary>Sets the Shim of ServiceManager.Unsubscribe(SubscribeServiceCallback`1&lt;!!0&gt; callback)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.XmlnsSupportsValidationAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.XmlnsSupportsValidationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.AllInstances.SupportsValidationGet">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.get_SupportsValidation()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.AllInstances.SupportsValidationSetBoolean">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.set_SupportsValidation(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.AllInstances.XmlNamespaceGet">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.get_XmlNamespace()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.AllInstances.XmlNamespaceSetString">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.set_XmlNamespace(String value)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.ConstructorStringBoolean">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.XmlnsSupportsValidationAttribute(String xmlNamespace, Boolean supportsValidation)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.SupportsValidationGet">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.get_SupportsValidation()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.SupportsValidationSetBoolean">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.set_SupportsValidation(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.XmlNamespaceGet">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.get_XmlNamespace()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.ShimXmlnsSupportsValidationAttribute.XmlNamespaceSetString">
            <summary>Sets the Shim of XmlnsSupportsValidationAttribute.set_XmlNamespace(String value)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.AssemblyReferences</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier,System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyReferences</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.OnItemChanged(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext,Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem)">
            <summary>Sets the Stub of AssemblyReferences.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubAssemblyReferences.OnItemChangedEditingContextContextItem">
            <summary>Sets the stub of AssemblyReferences.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.InitializeStub">
            <summary>Initializes a new instance of type StubContextItem</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.ItemType">
            <summary>Sets the stub of ContextItem.get_ItemType()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.ItemTypeGet">
            <summary>Sets the stub of ContextItem.get_ItemType()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.OnItemChanged(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext,Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem)">
            <summary>Sets the Stub of ContextItem.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItem.OnItemChangedEditingContextContextItem">
            <summary>Sets the stub of ContextItem.OnItemChanged(EditingContext context, ContextItem previousItem)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.ContextItemManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.Contains(System.Type)">
            <summary>Sets the Stub of ContextItemManager.Contains(Type itemType)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.ContainsType">
            <summary>Sets the stub of ContextItemManager.Contains(Type itemType)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.GetEnumerator">
            <summary>Sets the Stub of ContextItemManager.GetEnumerator()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.GetEnumerator01">
            <summary>Sets the stub of ContextItemManager.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.GetValue(System.Type)">
            <summary>Sets the Stub of ContextItemManager.GetValue(Type itemType)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.GetValueType">
            <summary>Sets the stub of ContextItemManager.GetValue(Type itemType)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.InitializeStub">
            <summary>Initializes a new instance of type StubContextItemManager</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.SetValue(Microsoft.VisualStudio.DesignTools.Extensibility.ContextItem)">
            <summary>Sets the Stub of ContextItemManager.SetValue(ContextItem value)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.SetValueContextItem">
            <summary>Sets the stub of ContextItemManager.SetValue(ContextItem value)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.Subscribe(System.Type,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback)">
            <summary>Sets the Stub of ContextItemManager.Subscribe(Type contextItemType, SubscribeContextCallback callback)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.SubscribeTypeSubscribeContextCallback">
            <summary>Sets the stub of ContextItemManager.Subscribe(Type contextItemType, SubscribeContextCallback callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.Unsubscribe(System.Type,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeContextCallback)">
            <summary>Sets the Stub of ContextItemManager.Unsubscribe(Type contextItemType, SubscribeContextCallback callback)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubContextItemManager.UnsubscribeTypeSubscribeContextCallback">
            <summary>Sets the stub of ContextItemManager.Unsubscribe(Type contextItemType, SubscribeContextCallback callback)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.CreateContextItemManager">
            <summary>Sets the Stub of EditingContext.CreateContextItemManager()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.CreateContextItemManager01">
            <summary>Sets the stub of EditingContext.CreateContextItemManager()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.CreateServiceManager">
            <summary>Sets the Stub of EditingContext.CreateServiceManager()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.CreateServiceManager01">
            <summary>Sets the stub of EditingContext.CreateServiceManager()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.Dispose(System.Boolean)">
            <summary>Sets the Stub of EditingContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.DisposeBoolean">
            <summary>Sets the stub of EditingContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.InitializeStub">
            <summary>Initializes a new instance of type StubEditingContext</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubEditingContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.RequirementAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.AllRequired">
            <summary>Sets the stub of RequirementAttribute.get_AllRequired()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.AllRequiredGet">
            <summary>Sets the stub of RequirementAttribute.get_AllRequired()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.CreateSubscription(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext)">
            <summary>Sets the Stub of RequirementAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.CreateSubscriptionEditingContext">
            <summary>Sets the stub of RequirementAttribute.CreateSubscription(EditingContext context)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.Equals(System.Object)">
            <summary>Sets the Stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.GetHashCode">
            <summary>Sets the Stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequirementAttribute</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.IsDefaultAttribute">
            <summary>Sets the Stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.Match(System.Object)">
            <summary>Sets the Stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.MeetsRequirement(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext)">
            <summary>Sets the Stub of RequirementAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.MeetsRequirementEditingContext">
            <summary>Sets the stub of RequirementAttribute.MeetsRequirement(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.RequirementSubscription</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.RequirementAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.InitializeStub">
            <summary>Initializes a new instance of type StubRequirementSubscription</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.Subscribe">
            <summary>Sets the Stub of RequirementSubscription.Subscribe()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.Subscribe01">
            <summary>Sets the stub of RequirementSubscription.Subscribe()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.Unsubscribe">
            <summary>Sets the Stub of RequirementSubscription.Unsubscribe()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubRequirementSubscription.Unsubscribe01">
            <summary>Sets the stub of RequirementSubscription.Unsubscribe()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.ServiceManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.Contains(System.Type)">
            <summary>Sets the Stub of ServiceManager.Contains(Type serviceType)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.ContainsType">
            <summary>Sets the stub of ServiceManager.Contains(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.GetEnumerator">
            <summary>Sets the Stub of ServiceManager.GetEnumerator()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.GetEnumerator01">
            <summary>Sets the stub of ServiceManager.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.GetService(System.Type)">
            <summary>Sets the Stub of ServiceManager.GetService(Type serviceType)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.GetServiceType">
            <summary>Sets the stub of ServiceManager.GetService(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.InitializeStub">
            <summary>Initializes a new instance of type StubServiceManager</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.Publish(System.Type,Microsoft.VisualStudio.DesignTools.Extensibility.PublishServiceCallback)">
            <summary>Sets the Stub of ServiceManager.Publish(Type serviceType, PublishServiceCallback callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.Publish(System.Type,System.Object)">
            <summary>Sets the Stub of ServiceManager.Publish(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.PublishTypeObject">
            <summary>Sets the stub of ServiceManager.Publish(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.PublishTypePublishServiceCallback">
            <summary>Sets the stub of ServiceManager.Publish(Type serviceType, PublishServiceCallback callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.Subscribe(System.Type,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback)">
            <summary>Sets the Stub of ServiceManager.Subscribe(Type serviceType, SubscribeServiceCallback callback)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.SubscribeTypeSubscribeServiceCallback">
            <summary>Sets the stub of ServiceManager.Subscribe(Type serviceType, SubscribeServiceCallback callback)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.Unsubscribe(System.Type,Microsoft.VisualStudio.DesignTools.Extensibility.SubscribeServiceCallback)">
            <summary>Sets the Stub of ServiceManager.Unsubscribe(Type serviceType, SubscribeServiceCallback callback)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Fakes.StubServiceManager.UnsubscribeTypeSubscribeServiceCallback">
            <summary>Sets the stub of ServiceManager.Unsubscribe(Type serviceType, SubscribeServiceCallback callback)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.AllInstances.EqualsObject">
            <summary>Sets the Shim of FeatureAttribute.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.AllInstances.FeatureProviderTypeGet">
            <summary>Sets the Shim of FeatureAttribute.get_FeatureProviderType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.AllInstances.GetHashCode01">
            <summary>Sets the Shim of FeatureAttribute.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.AllInstances.TypeIdGet">
            <summary>Sets the Shim of FeatureAttribute.get_TypeId()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.ConstructorType">
            <summary>Sets the Shim of FeatureAttribute.FeatureAttribute(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.EqualsObject">
            <summary>Sets the Shim of FeatureAttribute.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.FeatureProviderTypeGet">
            <summary>Sets the Shim of FeatureAttribute.get_FeatureProviderType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.GetHashCode">
            <summary>Sets the Shim of FeatureAttribute.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAttribute.TypeIdGet">
            <summary>Sets the Shim of FeatureAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAvailableEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAvailableEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.AllInstances.FeatureProviderTypeGet">
            <summary>Sets the Shim of FeatureAvailableEventArgs.get_FeatureProviderType()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.ConstructorType">
            <summary>Sets the Shim of FeatureAvailableEventArgs.FeatureAvailableEventArgs(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureAvailableEventArgs.FeatureProviderTypeGet">
            <summary>Sets the Shim of FeatureAvailableEventArgs.get_FeatureProviderType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnector`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnector{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.ContextGet">
            <summary>Sets the Shim of FeatureConnector`1.get_Context()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.CreateFeatureProvidersOf1TypeDefinition``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnector{`0},Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the Shim of FeatureConnector`1.CreateFeatureProviders(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.CreateFeatureProvidersTypeDefinition">
            <summary>Sets the Shim of FeatureConnector`1.CreateFeatureProviders(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.Dispose">
            <summary>Sets the Shim of FeatureConnector`1.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of FeatureConnector`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.AllInstances.ManagerGet">
            <summary>Sets the Shim of FeatureConnector`1.get_Manager()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.ConstructorFeatureManager">
            <summary>Sets the Shim of FeatureConnector`1.FeatureConnector`1(FeatureManager manager)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.ContextGet">
            <summary>Sets the Shim of FeatureConnector`1.get_Context()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.CreateFeatureProvidersOf1TypeDefinition``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the Shim of FeatureConnector`1.CreateFeatureProviders(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.CreateFeatureProvidersTypeDefinition">
            <summary>Sets the Shim of FeatureConnector`1.CreateFeatureProviders(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.Dispose">
            <summary>Sets the Shim of FeatureConnector`1.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.DisposeBoolean">
            <summary>Sets the Shim of FeatureConnector`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnector`1.ManagerGet">
            <summary>Sets the Shim of FeatureConnector`1.get_Manager()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnectorAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnectorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.AllInstances.EqualsObject">
            <summary>Sets the Shim of FeatureConnectorAttribute.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.AllInstances.FeatureConnectorTypeGet">
            <summary>Sets the Shim of FeatureConnectorAttribute.get_FeatureConnectorType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.AllInstances.GetHashCode01">
            <summary>Sets the Shim of FeatureConnectorAttribute.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.AllInstances.TypeIdGet">
            <summary>Sets the Shim of FeatureConnectorAttribute.get_TypeId()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.ConstructorType">
            <summary>Sets the Shim of FeatureConnectorAttribute.FeatureConnectorAttribute(Type featureConnectorType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.EqualsObject">
            <summary>Sets the Shim of FeatureConnectorAttribute.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.FeatureConnectorTypeGet">
            <summary>Sets the Shim of FeatureConnectorAttribute.get_FeatureConnectorType()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.GetHashCode">
            <summary>Sets the Shim of FeatureConnectorAttribute.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorAttribute.TypeIdGet">
            <summary>Sets the Shim of FeatureConnectorAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnectorInformation</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnectorInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureConnectorInformation.Constructor">
            <summary>Sets the Shim of FeatureConnectorInformation.FeatureConnectorInformation()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.ClearCaches">
            <summary>Sets the Shim of FeatureManager.ClearCaches()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.ContextGet">
            <summary>Sets the Shim of FeatureManager.get_Context()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.CreateFeatureProvidersType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.CreateFeatureProvidersTypePredicateOfType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, Predicate`1&lt;Type&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.CreateFeatureProvidersTypeTypeDefinition">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.CreateFeatureProvidersTypeTypeDefinitionPredicateOfType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, TypeDefinition typeDefinition, Predicate`1&lt;Type&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.Dispose">
            <summary>Sets the Shim of FeatureManager.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.DisposeBoolean">
            <summary>Sets the Shim of FeatureManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.FeatureAvailableAddEventHandlerOfFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.add_FeatureAvailable(EventHandler`1&lt;FeatureAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.FeatureAvailableRemoveEventHandlerOfFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.remove_FeatureAvailable(EventHandler`1&lt;FeatureAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.GetCustomAttributesDefaultTypeType">
            <summary>Sets the Shim of FeatureManager.GetCustomAttributesDefault(Type type, Type attributeType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.GetCustomAttributesTypeDefinitionType">
            <summary>Sets the Shim of FeatureManager.GetCustomAttributes(TypeDefinition typeDefinition, Type attributeType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.GetFeatureAttributesForTypeTypeDefinition">
            <summary>Sets the Shim of FeatureManager.GetFeatureAttributesForType(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.GetFeatureConnectorAttributesForTypeType">
            <summary>Sets the Shim of FeatureManager.GetFeatureConnectorAttributesForType(Type type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.InitializeFeaturesTypeDefinition">
            <summary>Sets the Shim of FeatureManager.InitializeFeatures(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.MetadataProviderGet">
            <summary>Sets the Shim of FeatureManager.get_MetadataProvider()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.OnDefaultCallbackFilterType">
            <summary>Sets the Shim of FeatureManager.OnDefaultCallbackFilter(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.OnFeatureAvailableFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.OnFeatureAvailable(FeatureAvailableEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.PendingConnectorsGet">
            <summary>Sets the Shim of FeatureManager.get_PendingConnectors()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances.RunningConnectorsGet">
            <summary>Sets the Shim of FeatureManager.get_RunningConnectors()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.AllInstances._ctorb__10_0AssemblyReferences">
            <summary>Sets the Shim of FeatureManager.&lt;.ctor&gt;b__10_0(AssemblyReferences newReferences)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.ClearCaches">
            <summary>Sets the Shim of FeatureManager.ClearCaches()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.ConstructorEditingContext">
            <summary>Sets the Shim of FeatureManager.FeatureManager(EditingContext context)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.ConstructorEditingContextMetadataProviderCallback">
            <summary>Sets the Shim of FeatureManager.FeatureManager(EditingContext context, MetadataProviderCallback metadataProvider)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.ContextGet">
            <summary>Sets the Shim of FeatureManager.get_Context()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProviderType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProvider(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProvidersType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProvidersTypeIEnumerableOfObjectPredicateOfType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, IEnumerable`1&lt;Object&gt; attrs, Predicate`1&lt;Type&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProvidersTypePredicateOfType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, Predicate`1&lt;Type&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProvidersTypeTypeDefinition">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.CreateFeatureProvidersTypeTypeDefinitionPredicateOfType">
            <summary>Sets the Shim of FeatureManager.CreateFeatureProviders(Type featureProviderType, TypeDefinition typeDefinition, Predicate`1&lt;Type&gt; match)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.Dispose">
            <summary>Sets the Shim of FeatureManager.Dispose()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.DisposeBoolean">
            <summary>Sets the Shim of FeatureManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.FeatureAvailableAddEventHandlerOfFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.add_FeatureAvailable(EventHandler`1&lt;FeatureAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.FeatureAvailableRemoveEventHandlerOfFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.remove_FeatureAvailable(EventHandler`1&lt;FeatureAvailableEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.GetCustomAttributesDefaultTypeType">
            <summary>Sets the Shim of FeatureManager.GetCustomAttributesDefault(Type type, Type attributeType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.GetCustomAttributesTypeDefinitionType">
            <summary>Sets the Shim of FeatureManager.GetCustomAttributes(TypeDefinition typeDefinition, Type attributeType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.GetFeatureAttributesForTypeTypeDefinition">
            <summary>Sets the Shim of FeatureManager.GetFeatureAttributesForType(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.GetFeatureConnectorAttributesForTypeType">
            <summary>Sets the Shim of FeatureManager.GetFeatureConnectorAttributesForType(Type type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.InitializeFeaturesTypeDefinition">
            <summary>Sets the Shim of FeatureManager.InitializeFeatures(TypeDefinition type)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.MetadataProviderGet">
            <summary>Sets the Shim of FeatureManager.get_MetadataProvider()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.OnDefaultCallbackFilterType">
            <summary>Sets the Shim of FeatureManager.OnDefaultCallbackFilter(Type featureProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.OnFeatureAvailableFeatureAvailableEventArgs">
            <summary>Sets the Shim of FeatureManager.OnFeatureAvailable(FeatureAvailableEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.PendingConnectorsGet">
            <summary>Sets the Shim of FeatureManager.get_PendingConnectors()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager.RunningConnectorsGet">
            <summary>Sets the Shim of FeatureManager.get_RunningConnectors()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureManager._ctorb__10_0AssemblyReferences">
            <summary>Sets the Shim of FeatureManager.&lt;.ctor&gt;b__10_0(AssemblyReferences newReferences)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.ShimFeatureProvider.Constructor">
            <summary>Sets the Shim of FeatureProvider.FeatureProvider()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAvailableEventArgs</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureAvailableEventArgs</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureAvailableEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnector`1</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.Dispose(System.Boolean)">
            <summary>Sets the Stub of FeatureConnector`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.DisposeBoolean">
            <summary>Sets the stub of FeatureConnector`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureConnector</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnector`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureConnectorInformation</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.FeatureConnectorType">
            <summary>Sets the stub of FeatureConnectorInformation.get_FeatureConnectorType()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.FeatureConnectorTypeGet">
            <summary>Sets the stub of FeatureConnectorInformation.get_FeatureConnectorType()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureConnectorInformation</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.PendingItems">
            <summary>Sets the stub of FeatureConnectorInformation.get_PendingItems()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.PendingItemsGet">
            <summary>Sets the stub of FeatureConnectorInformation.get_PendingItems()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.PendingServices">
            <summary>Sets the stub of FeatureConnectorInformation.get_PendingServices()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.PendingServicesGet">
            <summary>Sets the stub of FeatureConnectorInformation.get_PendingServices()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.RequiredItems">
            <summary>Sets the stub of FeatureConnectorInformation.get_RequiredItems()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.RequiredItemsGet">
            <summary>Sets the stub of FeatureConnectorInformation.get_RequiredItems()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.RequiredServices">
            <summary>Sets the stub of FeatureConnectorInformation.get_RequiredServices()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureConnectorInformation.RequiredServicesGet">
            <summary>Sets the stub of FeatureConnectorInformation.get_RequiredServices()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureManager</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.EditingContext,Microsoft.VisualStudio.DesignTools.Extensibility.Features.MetadataProviderCallback)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.Dispose(System.Boolean)">
            <summary>Sets the Stub of FeatureManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.DisposeBoolean">
            <summary>Sets the stub of FeatureManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureManager</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.OnFeatureAvailable(Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureAvailableEventArgs)">
            <summary>Sets the Stub of FeatureManager.OnFeatureAvailable(FeatureAvailableEventArgs e)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureManager.OnFeatureAvailableFeatureAvailableEventArgs">
            <summary>Sets the stub of FeatureManager.OnFeatureAvailable(FeatureAvailableEventArgs e)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Features.FeatureProvider</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider.InitializeStub">
            <summary>Initializes a new instance of type StubFeatureProvider</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Features.Fakes.StubFeatureProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.Bind(System.IEquatable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyDefinition.Constructor">
            <summary>Sets the Shim of AssemblyDefinition.AssemblyDefinition()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.EqualsAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.EqualsObject">
            <summary>Sets the Shim of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the Shim of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.IsEmptyGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_IsEmpty()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.LocationGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.NameGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.AllInstances.ToString01">
            <summary>Sets the Shim of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.Bind(System.IEquatable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.Constructor">
            <summary>Sets the Shim of AssemblyIdentifier.AssemblyIdentifier()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.ConstructorString">
            <summary>Sets the Shim of AssemblyIdentifier.AssemblyIdentifier(String assemblyName)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.ConstructorStringString">
            <summary>Sets the Shim of AssemblyIdentifier.AssemblyIdentifier(String assemblyName, String assemblyLocation)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.EqualityOpAssemblyIdentifierAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyIdentifier.op_Equality(AssemblyIdentifier first, AssemblyIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.EqualsAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.EqualsObject">
            <summary>Sets the Shim of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.GetHashCode">
            <summary>Sets the Shim of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.InequalityOpAssemblyIdentifierAssemblyIdentifier">
            <summary>Sets the Shim of AssemblyIdentifier.op_Inequality(AssemblyIdentifier first, AssemblyIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.IsEmptyGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_IsEmpty()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.LocationGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.NameGet">
            <summary>Sets the Shim of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAssemblyIdentifier.ToString">
            <summary>Sets the Shim of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeCallbackBuilder</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeCallbackBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AddCustomAttributesAttributeArray">
            <summary>Sets the Shim of AttributeCallbackBuilder.AddCustomAttributes(Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AddCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeCallbackBuilder.AddCustomAttributes(String memberName, Attribute[] attributes)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AllInstances.AddCustomAttributesAttributeArray">
            <summary>Sets the Shim of AttributeCallbackBuilder.AddCustomAttributes(Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AllInstances.AddCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeCallbackBuilder.AddCustomAttributes(String memberName, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.AllInstances.CallbackTypeIdentifierGet">
            <summary>Sets the Shim of AttributeCallbackBuilder.get_CallbackTypeIdentifier()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeCallbackBuilder.CallbackTypeIdentifierGet">
            <summary>Sets the Shim of AttributeCallbackBuilder.get_CallbackTypeIdentifier()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeTable</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.AttributedTypeIdentifiersGet">
            <summary>Sets the Shim of AttributeTable.get_AttributedTypeIdentifiers()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.ContainsAttributesString">
            <summary>Sets the Shim of AttributeTable.ContainsAttributes(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.GetAssemblyCustomAttributesString">
            <summary>Sets the Shim of AttributeTable.GetAssemblyCustomAttributes(String assemblyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.GetAttributedMembersString">
            <summary>Sets the Shim of AttributeTable.GetAttributedMembers(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.GetCustomAttributesString">
            <summary>Sets the Shim of AttributeTable.GetCustomAttributes(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AllInstances.GetCustomAttributesStringString">
            <summary>Sets the Shim of AttributeTable.GetCustomAttributes(String ownerTypeIdentifier, String memberName)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.AttributedTypeIdentifiersGet">
            <summary>Sets the Shim of AttributeTable.get_AttributedTypeIdentifiers()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.ContainsAttributesString">
            <summary>Sets the Shim of AttributeTable.ContainsAttributes(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.GetAssemblyCustomAttributesString">
            <summary>Sets the Shim of AttributeTable.GetAssemblyCustomAttributes(String assemblyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.GetAttributedMembersString">
            <summary>Sets the Shim of AttributeTable.GetAttributedMembers(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.GetCustomAttributesString">
            <summary>Sets the Shim of AttributeTable.GetCustomAttributes(String typeIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTable.GetCustomAttributesStringString">
            <summary>Sets the Shim of AttributeTable.GetCustomAttributes(String ownerTypeIdentifier, String memberName)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeTableBuilder</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeTableBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AddAssemblyCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddAssemblyCustomAttributes(String assemblyIdentifier, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AddCallbackStringAttributeCallback">
            <summary>Sets the Shim of AttributeTableBuilder.AddCallback(String typeIdentifier, AttributeCallback callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AddCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddCustomAttributes(String typeIdentifier, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AddCustomAttributesStringStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddCustomAttributes(String ownerTypeIdentifier, String memberName, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AddTableAttributeTable">
            <summary>Sets the Shim of AttributeTableBuilder.AddTable(AttributeTable table)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.AddAssemblyCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddAssemblyCustomAttributes(String assemblyIdentifier, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.AddCallbackStringAttributeCallback">
            <summary>Sets the Shim of AttributeTableBuilder.AddCallback(String typeIdentifier, AttributeCallback callback)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.AddCustomAttributesStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddCustomAttributes(String typeIdentifier, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.AddCustomAttributesStringStringAttributeArray">
            <summary>Sets the Shim of AttributeTableBuilder.AddCustomAttributes(String ownerTypeIdentifier, String memberName, Attribute[] attributes)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.AddTableAttributeTable">
            <summary>Sets the Shim of AttributeTableBuilder.AddTable(AttributeTable table)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.AllInstances.CreateTable">
            <summary>Sets the Shim of AttributeTableBuilder.CreateTable()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.Constructor">
            <summary>Sets the Shim of AttributeTableBuilder.AttributeTableBuilder()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimAttributeTableBuilder.CreateTable">
            <summary>Sets the Shim of AttributeTableBuilder.CreateTable()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.EventIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.EqualityOpEventIdentifierEventIdentifier">
            <summary>Sets the Shim of EventIdentifier.op_Equality(EventIdentifier first, EventIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimEventIdentifier.InequalityOpEventIdentifierEventIdentifier">
            <summary>Sets the Shim of EventIdentifier.op_Inequality(EventIdentifier first, EventIdentifier second)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.MetadataFactory</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.ResolveAssemblyEditingContextAssemblyIdentifier">
            <summary>Sets the Shim of MetadataFactory.ResolveAssembly(EditingContext context, AssemblyIdentifier assemblyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataFactory.ResolveTypeEditingContextTypeIdentifier">
            <summary>Sets the Shim of MetadataFactory.ResolveType(EditingContext context, TypeIdentifier typeIdentifier)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.MetadataService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.MetadataService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimMetadataService.Constructor">
            <summary>Sets the Shim of MetadataService.MetadataService()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.PropertyIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.EqualityOpPropertyIdentifierPropertyIdentifier">
            <summary>Sets the Shim of PropertyIdentifier.op_Equality(PropertyIdentifier first, PropertyIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimPropertyIdentifier.InequalityOpPropertyIdentifierPropertyIdentifier">
            <summary>Sets the Shim of PropertyIdentifier.op_Inequality(PropertyIdentifier first, PropertyIdentifier second)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.ProvideMetadataAttribute</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.ProvideMetadataAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.AllInstances.MetadataProviderTypeGet">
            <summary>Sets the Shim of ProvideMetadataAttribute.get_MetadataProviderType()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.ConstructorType">
            <summary>Sets the Shim of ProvideMetadataAttribute.ProvideMetadataAttribute(Type metadataProviderType)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimProvideMetadataAttribute.MetadataProviderTypeGet">
            <summary>Sets the Shim of ProvideMetadataAttribute.get_MetadataProviderType()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.Bind(System.IEquatable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeDefinition.Constructor">
            <summary>Sets the Shim of TypeDefinition.TypeDefinition()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier">
            <summary>Shim type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.#ctor(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.EqualsObject">
            <summary>Sets the Shim of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.EqualsTypeIdentifier">
            <summary>Sets the Shim of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the Shim of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.IsEmptyGet">
            <summary>Sets the Shim of TypeIdentifier.get_IsEmpty()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.NameGet">
            <summary>Sets the Shim of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.SimpleNameGet">
            <summary>Sets the Shim of TypeIdentifier.get_SimpleName()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.ToString01">
            <summary>Sets the Shim of TypeIdentifier.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.AllInstances.XmlNamespaceGet">
            <summary>Sets the Shim of TypeIdentifier.get_XmlNamespace()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.Bind(System.IEquatable{Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.Constructor">
            <summary>Sets the Shim of TypeIdentifier.TypeIdentifier()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.ConstructorString">
            <summary>Sets the Shim of TypeIdentifier.TypeIdentifier(String fullyQualifiedName)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.ConstructorStringString">
            <summary>Sets the Shim of TypeIdentifier.TypeIdentifier(String xmlNamespace, String name)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.EqualityOpTypeIdentifierTypeIdentifier">
            <summary>Sets the Shim of TypeIdentifier.op_Equality(TypeIdentifier first, TypeIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.EqualsObject">
            <summary>Sets the Shim of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.EqualsTypeIdentifier">
            <summary>Sets the Shim of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.GetHashCode">
            <summary>Sets the Shim of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.InequalityOpTypeIdentifierTypeIdentifier">
            <summary>Sets the Shim of TypeIdentifier.op_Inequality(TypeIdentifier first, TypeIdentifier second)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.IsEmptyGet">
            <summary>Sets the Shim of TypeIdentifier.get_IsEmpty()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.NameGet">
            <summary>Sets the Shim of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.SimpleNameGet">
            <summary>Sets the Shim of TypeIdentifier.get_SimpleName()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.StaticConstructor">
            <summary>Sets the Shim of TypeIdentifier.TypeIdentifier()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.ToString">
            <summary>Sets the Shim of TypeIdentifier.ToString()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.ShimTypeIdentifier.XmlNamespaceGet">
            <summary>Sets the Shim of TypeIdentifier.get_XmlNamespace()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.Equals(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier)">
            <summary>Sets the Stub of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.Equals(System.Object)">
            <summary>Sets the Stub of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.EqualsAssemblyIdentifier">
            <summary>Sets the stub of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.EqualsObject">
            <summary>Sets the stub of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.FullName">
            <summary>Sets the stub of AssemblyDefinition.get_FullName()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.FullNameGet">
            <summary>Sets the stub of AssemblyDefinition.get_FullName()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.GetHashCode">
            <summary>Sets the Stub of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.GetHashCode01">
            <summary>Sets the stub of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.GetTypes">
            <summary>Sets the Stub of AssemblyDefinition.GetTypes()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.GetTypes01">
            <summary>Sets the stub of AssemblyDefinition.GetTypes()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyDefinition</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.Location">
            <summary>Sets the stub of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.LocationGet">
            <summary>Sets the stub of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.Name">
            <summary>Sets the stub of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.NameGet">
            <summary>Sets the stub of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.ToString">
            <summary>Sets the Stub of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyDefinition.ToString01">
            <summary>Sets the stub of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.Equals(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier)">
            <summary>Sets the Stub of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.Equals(System.Object)">
            <summary>Sets the Stub of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.EqualsAssemblyIdentifier">
            <summary>Sets the stub of AssemblyIdentifier.Equals(AssemblyIdentifier other)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.EqualsObject">
            <summary>Sets the stub of AssemblyIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.GetHashCode">
            <summary>Sets the Stub of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.GetHashCode01">
            <summary>Sets the stub of AssemblyIdentifier.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyIdentifier</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.Location">
            <summary>Sets the stub of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.LocationGet">
            <summary>Sets the stub of AssemblyIdentifier.get_Location()</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.Name">
            <summary>Sets the stub of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.NameGet">
            <summary>Sets the stub of AssemblyIdentifier.get_Name()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.ToString">
            <summary>Sets the Stub of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAssemblyIdentifier.ToString01">
            <summary>Sets the stub of AssemblyIdentifier.ToString()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AttributeTableBuilder</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeTableBuilder</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubAttributeTableBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubIProvideAttributeTable">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.IProvideAttributeTable</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubIProvideAttributeTable.#ctor">
            <summary>Initializes a new instance of type StubIProvideAttributeTable</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubIProvideAttributeTable.Microsoft#VisualStudio#DesignTools#Extensibility#Metadata#IProvideAttributeTable#AttributeTable">
            <summary>Sets the stub of IProvideAttributeTable.get_AttributeTable()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubIProvideAttributeTable.AttributeTableGet">
            <summary>Sets the stub of IProvideAttributeTable.get_AttributeTable()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.MetadataService</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.InitializeStub">
            <summary>Initializes a new instance of type StubMetadataService</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.ResolveAssembly(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.AssemblyIdentifier)">
            <summary>Sets the Stub of MetadataService.ResolveAssembly(AssemblyIdentifier assemblyIdentifier)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.ResolveAssemblyAssemblyIdentifier">
            <summary>Sets the stub of MetadataService.ResolveAssembly(AssemblyIdentifier assemblyIdentifier)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.ResolveType(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier)">
            <summary>Sets the Stub of MetadataService.ResolveType(TypeIdentifier typeIdentifier)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubMetadataService.ResolveTypeTypeIdentifier">
            <summary>Sets the stub of MetadataService.ResolveType(TypeIdentifier typeIdentifier)</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.Equals(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier)">
            <summary>Sets the Stub of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.Equals(System.Object)">
            <summary>Sets the Stub of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.EqualsObject">
            <summary>Sets the stub of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.EqualsTypeIdentifier">
            <summary>Sets the stub of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.FullName">
            <summary>Sets the stub of TypeDefinition.get_FullName()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.FullNameGet">
            <summary>Sets the stub of TypeDefinition.get_FullName()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.GetHashCode">
            <summary>Sets the Stub of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.GetHashCode01">
            <summary>Sets the stub of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.InitializeStub">
            <summary>Initializes a new instance of type StubTypeDefinition</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsAssignableFrom(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition)">
            <summary>Sets the Stub of TypeDefinition.IsAssignableFrom(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsAssignableFromTypeDefinition">
            <summary>Sets the stub of TypeDefinition.IsAssignableFrom(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsPrimitive">
            <summary>Sets the stub of TypeDefinition.get_IsPrimitive()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsPrimitiveGet">
            <summary>Sets the stub of TypeDefinition.get_IsPrimitive()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsSubclassOf(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeDefinition)">
            <summary>Sets the Stub of TypeDefinition.IsSubclassOf(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.IsSubclassOfTypeDefinition">
            <summary>Sets the stub of TypeDefinition.IsSubclassOf(TypeDefinition typeDefinition)</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.Name">
            <summary>Sets the stub of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.NameGet">
            <summary>Sets the stub of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.ToString">
            <summary>Sets the Stub of TypeIdentifier.ToString()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeDefinition.ToString01">
            <summary>Sets the stub of TypeIdentifier.ToString()</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier">
            <summary>Stub type of Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.Equals(Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.TypeIdentifier)">
            <summary>Sets the Stub of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.Equals(System.Object)">
            <summary>Sets the Stub of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.EqualsObject">
            <summary>Sets the stub of TypeIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.EqualsTypeIdentifier">
            <summary>Sets the stub of TypeIdentifier.Equals(TypeIdentifier other)</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.GetHashCode">
            <summary>Sets the Stub of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.GetHashCode01">
            <summary>Sets the stub of TypeIdentifier.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.InitializeStub">
            <summary>Initializes a new instance of type StubTypeIdentifier</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.Name">
            <summary>Sets the stub of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.NameGet">
            <summary>Sets the stub of TypeIdentifier.get_Name()</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.ToString">
            <summary>Sets the Stub of TypeIdentifier.ToString()</summary>
        </member>
        <member name="F:Microsoft.VisualStudio.DesignTools.Extensibility.Metadata.Fakes.StubTypeIdentifier.ToString01">
            <summary>Sets the stub of TypeIdentifier.ToString()</summary>
        </member>
    </members>
</doc>
