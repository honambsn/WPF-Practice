<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:File_Explorer.CustomControls"
                    xmlns:prop="clr-namespace:Files_Explorer.Properties">

    <!--#region window btn-->
    <!--
    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeButtonStyle">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        -->
    <!--<Setter Property="Background" Value="Transparent"/>-->
    <!--
        <Setter Property="Width" Value="44"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        -->
    <!--<Setter Property="Foreground" Value="{StaticResource IconActiveBrush}"/>-->
    <!--
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}">
                        -->
    <!--Background="{TemplateBinding Background}">-->
    <!--
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeRestoreButtonStyle"
           BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Setter Property="Content" Value="&#xE922;"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                         Value="Maximized">
                <Setter Property="Content" Value="&#xE922;"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeCloseButtonStyle"
           BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Setter Property="Content" Value="&#xE922;"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsMouseCaptured" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource CaptionCloseButtonsMouseOverBrush}"/>
            </MultiTrigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background" Value="{StaticResource CaptionCloseButtonsDownBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    -->
    <!--#endregion-->


    <!--#region nav btn-->
    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeButtonStyle">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="44"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{DynamicResource IconActiveBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="WindowChromeRestoreButtonStyle"
           BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Setter Property="Content"
                Value="&#xE922;"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                         Value="Maximized">
                <Setter Property="Content" Value="&#xE923;"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowChromeCloseButtonStyle" BasedOn="{StaticResource WindowChromeButtonStyle}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsMouseCaptured" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource CaptionCloseButtonsMouseOverBrush}"/>
            </MultiTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource CaptionCloseButtonsDownBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->


    <!--region drive and folder btn-->
    <!--
    
    <Style TargetType="{x:Type cc:DriveAndFolderButton}">
        <Setter Property="Foreground" Value="{DynamicResource NavFontBrush}"/>
        <Setter Property="GroupName" Value="DNFButton"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:DriveAndFolderButton}">
                    <Grid
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="47"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border Name="bgBorder"
                                Grid.ColumnSpan="3"
                                BorderBrush="{DynamicResource  BorderBrush}"
                                BorderThickness="1"
                                Opacity=".2"
                                Visibility="Collapsed">
                            <Rectangle Fill="{DynamicResource NavFontBrush}"
                                       Opacity=".2"/>
                        </Border>

                        <Path
                            Grid.Column="0"
                            Data="{TemplateBinding Folder}"
                            Stretch="Uniform"
                            Fill="{StaticResource NavFontBrush}"
                            Height="15"
                            Width="20"
                            Effect="{DynamicResource DropShadowEffect}"/>

                        <ContentPresenter
                            Grid.Column="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Effect="{DynamicResource DropShadowEffect}"/>
                    
                    
                        -->
    <!--unpin btn-->
    <!--
    
                        <Button
                            Name="UnPinButton"
                            Grid.Column="2"
                            Width="40"
                            Foreground="{DynamicResource NavFontBrush}"
                            Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--#endregion-->


    <!--#region drive and folder btn-->

    <Style TargetType="{x:Type cc:DriveAndFolderButton}">
        <Setter Property="Foreground" Value="{DynamicResource NavFontBrush}"/>
        <Setter Property="GroupName" Value="DNFButton"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:DriveAndFolderButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="47"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border Name="bgBorder"
                            Grid.ColumnSpan="3"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1"
                            Opacity=".2"
                            Visibility="Collapsed">
                            <Rectangle Fill="{DynamicResource NavFontBrush}"
                                   Opacity=".2"/>
                        </Border>

                        <Path
                        Grid.Column="0"
                        Data="{TemplateBinding Icon}"
                        Stretch="Uniform"
                        Fill="{DynamicResource NavFontBrush}"
                        Height="15"
                        Width="20"
                        Effect="{DynamicResource DropShadowEffect}"/>

                        <ContentPresenter
                        Grid.Column="1"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Effect="{DynamicResource DropShadowEffect}"/>

                        <!--unpin btn-->
                        <Button
                        Name="UnPinButton"
                        Content="{DynamicResource UnPin}"
                        Command="{TemplateBinding UnPinCommand}"
                        CommandParameter="{Binding}"
                        Grid.Column="2"
                        Width="40"
                        Foreground="{DynamicResource NavFontBrush}"
                        Style="{DynamicResource ButtonWithIconStyle}"
                        Visibility="Collapsed"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="bgBorder" Property="Opacity" Value="1"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bgBorder" Property="Opacity" Value=".8"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="bgBorder" Property="Opacity" Value=".8"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding IsPinned}" Value="True">
                            <Setter TargetName="UnPinButton"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->


    <!--#region menu header btn-->
    <Style x:Key="MenuHeaderRadioButtonStyle"
       TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuHeader.Static}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="GroupName" Value="MenuHeader"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!-- Fixed the incorrect closing quote and curly brace -->
                            <Setter Property="Foreground" Value="{DynamicResource MenuHeader.Checked}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


    <!--#region button with icon-->
    <Style x:Key="ButtonWithIconStyle"
       TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                        Name="Path"
                        Data="{TemplateBinding Content}"
                        Fill="{TemplateBinding Foreground}"
                        Height="{TemplateBinding FontSize}"
                        Stretch="Uniform"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledFontBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ToggleButtonWithIconStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                            Name="Path"
                            Data="{TemplateBinding Content}"
                            Fill="{TemplateBinding Foreground}"
                            Height="{TemplateBinding FontSize}"
                            Stretch="Uniform"/>
                        <!--VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


    <!--#region toggle expand/collapse sub menu-->
    <Style
        x:Key="ExpandCollapseToggleButtonStyle"
        TargetType="{x:Type ToggleButton}"
        BasedOn="{StaticResource ToggleButtonWithIconStyle}">

        <Setter Property="Content" Value="{DynamicResource CollapseArrow}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content"
                        Value="{DynamicResource ExpandArrow}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->


    <!--#region darkmode toggle button-->
    <Style x:Key="DarkLightModeToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource ToggleButtonWithIconStyle}">
        <Setter Property="Content" Value="{DynamicResource Moon}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}" Value="True">
                <Setter Property="Content" Value="{DynamicResource Sun}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region sub menu icon btn-->
    <Style x:Key="SubMenuIconButtonStyle"
           TargetType="{x:Type cc:SubMenuIconButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource IconActiveBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:SubMenuIconButton}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Border
                                Name="bgBorder"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                Opacity=".1"
                                Visibility="Collapsed">
                                <Rectangle
                                    Fill="{StaticResource NavFontBrush}"
                                    Opacity=".1"/>
                            </Border>
                            <StackPanel
                                Orientation="Vertical"
                                Margin="5">

                                <Path Name="Path"
                                      Data="{TemplateBinding Icon}"
                                      Fill="{TemplateBinding Foreground}"
                                      Height="24"
                                      Stretch="Uniform"/>

                                <TextBlock
                                    Name="TextBlock"
                                    Margin="0,5,0,0"
                                    FontWeight="SemiBold"
                                    Text="{TemplateBinding Content}"
                                    HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger
                            SourceName="TextBlock"
                            Property="Text"
                            Value="">
                            <Setter TargetName="TextBlock"
                                Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="bgBorder" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>